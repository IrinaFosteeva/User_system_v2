package main

import (
	"User_system_v2/internal/db"
	"User_system_v2/internal/handlers"
	"User_system_v2/internal/storage"
	"User_system_v2/internal/storage/memorystorage"
	"User_system_v2/internal/storage/postgresstorage"
	"fmt"
	"github.com/joho/godotenv"
	"log"
	"net/http"
	"os"
)

func main() {
	err := godotenv.Load()
	if err != nil {
		log.Println("‚ö†Ô∏è  .env —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º —Å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º–∏ –æ–∫—Ä—É–∂–µ–Ω–∏—è")
	}

	driver := os.Getenv("STORAGE_DRIVER")
	var store storage.Storage

	switch driver {
	case "memory":
		fmt.Println("üöÄ –ò—Å–ø–æ–ª—å–∑—É–µ–º in-memory —Ö—Ä–∞–Ω–∏–ª–∏—â–µ")
		store = memorystorage.NewMemoryStorage()

	case "postgres":
		fmt.Println("üêò –ò—Å–ø–æ–ª—å–∑—É–µ–º PostgreSQL —Ö—Ä–∞–Ω–∏–ª–∏—â–µ")
		db.Init()
		store = postgresstorage.NewPostgresStorage(db.DB)

	default:
		log.Fatalf("‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π STORAGE_DRIVER: %s", driver)
	}

	http.HandleFunc("/persons", handlers.MakePersonsHandler(store))
	http.HandleFunc("/persons/", handlers.MakePersonHandler(store))

	fmt.Println("‚úÖ –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ http://localhost:8081")
	log.Fatal(http.ListenAndServe(":8081", nil))
}
